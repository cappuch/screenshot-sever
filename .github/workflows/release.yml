name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        output_name=file-server
        if [ "$GOOS" = "windows" ]; then
          output_name+='.exe'
        fi
        go build -v -o "dist/file-server-${{ matrix.goos }}-${{ matrix.goarch }}/$output_name"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: file-server-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/file-server-${{ matrix.goos }}-${{ matrix.goarch }}/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Create Release Archives
      run: |
        cd dist
        for dir in */; do
          platform=${dir%/}
          zip -r "../$platform.zip" "$dir"
        done

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}